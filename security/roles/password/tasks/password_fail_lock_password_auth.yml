- name: check if pam_faillock.so exist in password-auth
  shell: /usr/bin/cat /etc/pam.d/password-auth | grep "pam_faillock.so"
  register: pam_lock_exist_in_password_auth
  failed_when: "pam_lock_exist_in_password_auth.rc != 0 and pam_lock_exist_in_password_auth.rc != 1"  

- name: update pam_faillock.so in type auth, control is default=required
  pamd:
    name: password-auth
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: 'preauth
      silent
      audit
      deny=3
      unlock_time=600
      even_deny_root
      root_unlock_time=600'
    state: updated
  when: pam_lock_exist_in_password_auth.rc == 0

- name: update pam_faillock.so in type auth, control is default=die
  pamd:
    name: password-auth
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: 'authfail
      silent
      audit
      deny=3
      unlock_time=600
      even_deny_root
      root_unlock_time=600'
    state: updated
  when: pam_lock_exist_in_password_auth.rc == 0
    
- name: update pam_faillock.so in type account
  pamd:
    name: password-auth
    type: account
    control: required
    module_path: pam_faillock.so
    state: updated
  when: pam_lock_exist_in_password_auth.rc == 0
    
- name: insert pam_faillock.so in type auth, control is default=die
  pamd:
    name: password-auth
    type: auth
    control: required
    module_path: pam_env.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: 'preauth
      silent
      audit
      deny=3
      unlock_time=600
      even_deny_root
      root_unlock_time=600'
    state: after
  when: pam_lock_exist_in_password_auth.rc == 1
    
- name: insert pam_faillock.so in type auth, control is default=die
  pamd:
    name: password-auth
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: 'authfail
      silent
      audit
      deny=3
      unlock_time=600
      even_deny_root
      root_unlock_time=600'
    state: after
  when: pam_lock_exist_in_password_auth.rc == 1
    
- name: insert pam_faillock.so in type account
  pamd:
    name: password-auth
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: after
  when: pam_lock_exist_in_password_auth.rc == 1
